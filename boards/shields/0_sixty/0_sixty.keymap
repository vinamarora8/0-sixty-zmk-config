/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define DEFAULT 0
#define RAISE 1
#define NUM 2

/ {
    behaviors {
        hml: home_row_mod_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            /* require-prior-idle-ms = <150>; */
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <
                 6  7  8  9 10 11
                18 19 20 21 22 23
                30 31 32 33 34 35
                42 43 44 45 46 47
            >; // Right side keys, only these will trigger hold
            hold-trigger-on-release;
        };
        hmr: home_row_mod_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            /* require-prior-idle-ms = <150>; */
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <
                 0  1  2  3  4  5
                12 13 14 15 16 17
                24 25 26 27 28 29
                36 37 38 39 40 41
            >; // List of keys on the left side of the keyboard
            hold-trigger-on-release;
        };
    };
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
/*
|  ESC  |  1  |  2  |  3  |  4  |  5  |  6  |  7  |  8  |  9  |  0  | BKSP |
|  TAB  |  Q  |  W  |  E  |  R  |  T  |  Y  |  U  |  I  |  O  |  P  | RET  |
|  LCTL |  A  |  S  |  D  |  F  |  G  |  H  |  J  |  K  |  L  |  ;  | RCTL |
| SHIFT |  Z  |  X  |  C  |  V  |  B  |  N  |  M  |  ,  |  .  |  /  | SHFT |
|       | NUM | ALT | CMD |RAISE|   SPACE   |RAISE| CMD | ALT |RCTL |      |
*/
&kp ESC      &kp N1   &kp N2   &kp N3   &kp N4        &kp N5   &kp N6    &kp N7        &kp   N8  &kp  N9  &kp  N0  &kp BSPC
&kp TAB      &kp Q    &kp W    &kp E    &kp R         &kp T    &kp Y     &kp U         &kp   I   &kp  O   &kp   P  &kp RET
&kp LCTL     &kp A    &kp S    &kp D    &hml LSHIFT F &kp G    &kp H     &hmr RSHIFT J &kp   K   &kp  L   &kp SEMI &kp RCTL
&kp LSHFT    &kp Z    &kp X    &kp C    &kp V         &kp B    &kp N     &kp M         &kp COMMA &kp DOT  &kp FSLH &kp RSHFT
&none        &mo NUM  &kp LALT &kp LCMD &mo RAISE           &kp SPACE    &mo RAISE     &kp RCMD  &kp RALT &mo RCTL &none
            >;
        };

        raise_layer {
            bindings = <
/*
|  F12   |  F1  |   F2  |   F3  |  F4  |  F5  |  F6  |  F7  |  F8  |   F9  |  F10 |  F11 |
| UNLOCK |  [   |   <   |   >   |  ]   |  ~   |  |   |  `   |  '   |   "   | PGUP |  BS  |
|        |  {   |   (   |   )   |  }   | DEL  | LEFT | DOWN |  UP  | RIGHT | PGDN |  BS  |
| SHIFT  |      | VOLDN | VOLUP | PLAY | CAPS |  =   |  _   |  -   |   +   |   \  | SHFT |
|        |      |       |       |      |     ESC     |      |      |       |      |      |
*/
&kp F12        &kp F1     &kp F2        &kp F3        &kp F4     &kp F5     &kp F6     &kp F7     &kp F8     &kp F9     &kp F10    &kp F11
&studio_unlock &kp LBKT   &kp LT        &kp GT        &kp RBKT   &kp TILDE  &kp PIPE   &kp GRAVE  &kp APOS   &kp DQT    &kp PG_UP  &kp BSPC
&trans         &kp LBRC   &kp LPAR      &kp RPAR      &kp RBRC   &kp DEL    &kp LEFT   &kp DOWN   &kp UP     &kp RIGHT  &kp PG_DN  &kp BSPC
&trans         &trans     &kp C_VOL_DN  &kp C_VOL_UP  &kp C_PP   &kp CAPS   &kp EQUAL  &kp UNDER  &kp MINUS  &kp PLUS   &kp BSLH   &trans
&trans         &trans     &trans        &trans        &kp ESC               &kp BSPC   &kp ESC    &trans     &trans     &trans     &trans
            >;
        };

        numbers_layer {
            bindings = <
/*
|    |    |    |    |    |    |    |     |     |     |     |    |
|    |    |    |    |    |    |    |  7  |  8  |  9  |  0  |    |
|    |    |    |    |    |    |    |  4  |  5  |  6  |     |    |
|    |    |    |    |    |    |    |  1  |  2  |  3  |     |    |
|    |    |    |    |    |         |     |     |     |     |    |
*/
&trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
&trans &trans &trans &trans &trans &trans &trans &kp N7 &kp N8 &kp N9 &kp N0 &trans
&trans &trans &trans &trans &trans &trans &trans &kp N4 &kp N5 &kp N6 &trans &trans
&trans &trans &trans &trans &trans &trans &trans &kp N1 &kp N2 &kp N3 &trans &trans
&trans &trans &trans &trans &trans        &trans &trans &trans &trans &trans &trans
            >;

        };

    };
};
